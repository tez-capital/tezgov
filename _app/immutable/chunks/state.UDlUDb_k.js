var u=Object.defineProperty;var h=(t,e,s)=>e in t?u(t,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[e]=s;var n=(t,e,s)=>(h(t,typeof e!="symbol"?e+"":e,s),s);import{d as o,w as c}from"./index.tZFvyDW1.js";import{E as d}from"./constants.waxd6Cmu.js";class v{constructor(e,s=5e3){n(this,"url");n(this,"eventSource",null);n(this,"retryCount",0);n(this,"retryDelay");n(this,"onmessage",()=>{});n(this,"onstatuschange",()=>{});this.url=e,this.retryDelay=s,this.connect()}connect(){this.eventSource=new EventSource(this.url),this.eventSource.onopen=()=>{this.retryCount=0,this.onstatuschange("connected")},this.eventSource.onmessage=e=>this.onmessage(e),this.eventSource.onerror=()=>{this.onstatuschange("disconnected"),this.eventSource?.close(),setTimeout(()=>{this.retryCount++,this.onstatuschange("reconnecting"),this.connect()},this.retryDelay)}}close(){this.eventSource?.close()}}const i=c("disconnected"),r=c(d),E=o(r,t=>{const e=t?.id;return e?`TEZPEAK - ${e}`:"TEZPEAK"}),P=o([r,i],([t,e])=>{if(e!=="connected"||t?.baker_node.connection_status!=="connected")return"error";for(const s of Object.values(t?.services.node_services??{}))if(s.status!=="running")return"error";for(const s of Object.values(t?.services.signer_services??{}))if(s.status!=="running")return"error";return"ok"}),a=new v("/sse");a.onmessage=t=>{const e=JSON.parse(t.data);r.set(e.data)};a.onstatuschange=t=>{i.set(t)};export{P as A,E as a,i as b,r as s};
