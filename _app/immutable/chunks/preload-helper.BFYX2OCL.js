const v="modulepreload",y=function(u,l){return new URL(u,l).href},h={},p=function(l,a,f){let d=Promise.resolve();if(a&&a.length>0){const c=document.getElementsByTagName("link"),n=document.querySelector("meta[property=csp-nonce]"),r=n?.nonce||n?.getAttribute("nonce");d=Promise.allSettled(a.map(e=>{if(e=y(e,f),e in h)return;h[e]=!0;const s=e.endsWith(".css"),m=s?'[rel="stylesheet"]':"";if(!!f)for(let o=c.length-1;o>=0;o--){const i=c[o];if(i.href===e&&(!s||i.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${e}"]${m}`))return;const t=document.createElement("link");if(t.rel=s?"stylesheet":v,s||(t.as="script"),t.crossOrigin="",t.href=e,r&&t.setAttribute("nonce",r),document.head.appendChild(t),s)return new Promise((o,i)=>{t.addEventListener("load",o),t.addEventListener("error",()=>i(new Error(`Unable to preload CSS for ${e}`)))})}))}return d.then(c=>{for(const n of c||[]){if(n.status!=="rejected")continue;const r=new Event("vite:preloadError",{cancelable:!0});if(r.payload=n.reason,window.dispatchEvent(r),!r.defaultPrevented)throw n.reason}return l()})};export{p as _};
