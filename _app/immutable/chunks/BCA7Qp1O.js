const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./kkm6s6w0.js","./BonuB96r.js","./Di_eboX7.js"])))=>i.map(i=>d[i]);
import{H as _,v as x,V as k,I as O,i as w,a as y,S as f,P as m,b as R,h as I,m as K,c as v,t as E,d as P,e as z,f as b,p as n,g as D,j as S,k as N,T as g,l as V,n as U,o as A}from"./zgDuyK8m.js";import{t as B}from"./trIFHh5f.js";import{_ as H}from"./BonuB96r.js";function p(o,e,t,i){function r(s){return s instanceof t?s:new t(function(a){a(s)})}return new(t||(t=Promise))(function(s,a){function h(c){try{d(i.next(c))}catch(l){a(l)}}function u(c){try{d(i.throw(c))}catch(l){a(l)}}function d(c){c.done?s(c.value):r(c.value).then(h,u)}d((i=i.apply(o,[])).next())})}class F extends V{constructor(e,t){super(),this.message=e,this.cause=t,this.name="OperationNotAuthorized"}}class $ extends g{constructor(e,t,i){super(),this.cause=e,this.bytes=t,this.watermark=i,this.name="BadSigningData",this.message=i?"Invalid signing data with watermark":`Invalid signing data: "${t}"`}}class C extends g{constructor(e,t,i){super(),this.requestedPk=e,this.requestedPkh=t,this.initializedPkh=i,this.name="PublicKeyVerificationFailedError",this.message=`Requested pk "${e}" has pkh "${t}" deesn't match initialized pkh "${i}."`}}class L extends g{constructor(e,t){super(),this.bytes=e,this.signature=t,this.name="SignatureVerificationFailedError",this.name="SignatureVerificationFailedError",this.message="Invalid signature of bytes failed verification agaisnt public key."}}const T={ed:{pk:n.edpk,sk:n.edsk,pkh:n.tz1,sig:n.edsig},p2:{pk:n.p2pk,sk:n.p2sk,pkh:n.tz3,sig:n.p2sig},sp:{pk:n.sppk,sk:n.spsk,pkh:n.tz2,sig:n.spsig}};class q{constructor(e,t,i={},r=new _){this.pkh=e,this.rootUrl=t,this.options=i,this.http=r;const s=x(this.pkh);if(s!==k.VALID)throw new O(this.pkh,w(s))}publicKeyHash(){return p(this,void 0,void 0,function*(){return this.pkh})}createURL(e){let t=this.rootUrl;for(;t.endsWith("/");)t=t.slice(0,-1);return`${t}${e}`}publicKey(){return p(this,void 0,void 0,function*(){try{const{public_key:e}=yield this.http.createRequest({url:this.createURL(`/keys/${this.pkh}`),method:"GET",headers:this.options.headers});return e}catch(e){throw e instanceof y&&e.status===f.NOT_FOUND?new m(this.pkh,e):e}})}secretKey(){return p(this,void 0,void 0,function*(){throw new R("Secret key cannot be exposed")})}sign(e,t){return p(this,void 0,void 0,function*(){try{let i=I(e);typeof t<"u"&&(i=K(t,i));const r=v(E(i)),{signature:s}=yield this.http.createRequest({url:this.createURL(`/keys/${this.pkh}`),method:"POST",headers:this.options.headers},r),a=s.startsWith("sig")?s.substring(0,3):s.substring(0,5);if(!P(a))throw new z(s,w(k.NO_PREFIX_MATCHED)+" from a remote signer.");const h=b(s,n[a]),u=yield this.publicKey();if(yield this.verifyPublicKey(u),!D(r,u,s))throw new L(r,s);return{bytes:e,sig:S(h,n.sig),prefixSig:s,sbytes:e+v(E(h))}}catch(i){if(i instanceof y){if(i.status===f.NOT_FOUND)throw new m(this.pkh,i);if(i.status===f.FORBIDDEN)throw new F("Signing Operation not authorized",i);if(i.status===f.BAD_REQUEST)throw new $(i,e,t)}throw i}})}verifyPublicKey(e){return p(this,void 0,void 0,function*(){const t=e.substring(0,2),i=b(e,T[t].pk),r=S(N.hash(i,20),T[t].pkh);if(r!==this.pkh)throw new C(e,r,this.pkh)})}}const M=async(o,e)=>{const{createTezosToolkit:t}=await H(async()=>{const{createTezosToolkit:h}=await import("./kkm6s6w0.js");return{createTezosToolkit:h}},__vite__mapDeps([0,1,2]),import.meta.url),i=await t(o.rpc),r=new q(e.pkh,e.url);i.setSignerProvider(r);const s=await i.signer.publicKeyHash(),a=s?await i.rpc.getManagerKey(s):void 0;return{accountId:s,tezos:i,isActivated:a!==void 0}},W=3e5,X=async(o,e)=>{try{const t=await U(o),{accountId:i,tezos:r,isActivated:s}=await Promise.race([await M(t,e),B(W)]),a={id:i,isActivated:s,type:"ledger",network:o.id.toString(),explorer:t.explorer,rpc:t.rpc,balance:0n,stakedBalance:0n,fullBalance:0n,finalizableBalance:0n},h=r;return h.signOperation=async c=>({signature:(await r.signer.sign(c,new Uint8Array([3]))).sbytes.slice(c.length)}),{...await A(a,h),logout:async()=>{}}}catch(t){throw t}};export{X as createRemoteSignerSession};
