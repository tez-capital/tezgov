var T=Object.defineProperty;var S=(p,c,t)=>c in p?T(p,c,{enumerable:!0,configurable:!0,writable:!0,value:t}):p[c]=t;var d=(p,c,t)=>(S(p,typeof c!="symbol"?c+"":c,t),t);import{E as _,x as z,y as A,z as I,O as h}from"./main.fcc73858.js";import{S as P}from"./SessionBase.0da79371.js";import{connect_beacon_wallet as B,disconnect_beacon_wallet as E}from"./beacon.453f8ecc.js";import{S as f}from"./DAppClient.ffc3f8ec.js";import{c as m,p as O,P as x}from"./taquito-utils.es6.9e1a8ea2.js";import"./index.558d09ea.js";class y extends P{constructor(t,n,o,a,e){super(t,o,a,e);d(this,"wallet");this.wallet=n}get AccountType(){return _.Beacon}get Icon(){return new z("/assets/svg/beacon-wallet-icon.svg",A.raw)}static async create(t,n){var r,i;const o=I[t];if(!o)throw new Error("Invalid network specification!");const{account:a,tezos:e,forger:s,managerKey:l,wallet:w}=await B((r=o.id)!=null?r:t,{...n,rpc:(i=n==null?void 0:n.rpc)!=null?i:o.rpc});return new y(a!=null?a:"",w,e,s,{networkId:t,managerKey:l})}static async create_from_cache(){}logout(){E()}async switch_wallet(){return y.create(this.NetworkId,{rpc:this.Tezos.rpc.getRpcUrl(),useCached:!1})}async vote(t,n){if(n){const e=await this.forge_ballot_op(t),s=async()=>{const l=this.Tezos.wallet.context,w=await this.wallet.client.requestSignPayload({signingType:f.OPERATION,payload:"03"+e}),r=m(w.signature,O[x.SIG]),i=[...r.slice(0,r.length-2)].map(g=>g.toString(16).padStart(2,"0")).join(""),u=await this.Tezos.rpc.injectOperation(e.concat(i));return l.operationFactory.createOperation(u)};return new h(s,"Vote",{account:this.Account,ballot:t})}const o=await this.forge_ballot(t),a=async()=>{const e=this.Tezos.wallet.context,s=await this.wallet.sendOperations([o]);return e.operationFactory.createOperation(s)};return new h(a,"Vote",{account:this.Account,ballot:t})}async propose(t,n){if(n){const e=await this.forge_proposals_op(t),s=async()=>{const l=this.Tezos.wallet.context,w=await this.wallet.client.requestSignPayload({signingType:f.OPERATION,payload:"03".concat(e)}),r=m(w.signature,O[x.SIG]),i=[...r.slice(0,r.length-2)].map(g=>g.toString(16).padStart(2,"0")).join(""),u=await this.Tezos.rpc.injectOperation(e.concat(i));return l.operationFactory.createOperation(u)};return new h(s,"Propose",{account:this.Account,proposals:t})}const o=await this.forge_proposals(t),a=async()=>{const e=this.Tezos.wallet.context,s=await this.wallet.sendOperations([o]);return e.operationFactory.createOperation(s)};return new h(a,"Propose",{account:this.Account,proposals:t})}}export{y as BeaconSession};
