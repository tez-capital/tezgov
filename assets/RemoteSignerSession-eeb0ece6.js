import{p as r,W as O,V as f,X as S,i as _,d as A,Y as K,Z as I,$ as k,a0 as m,a1 as R,a2 as U,a3 as b,a4 as P,b as T,c as F,T as y,a5 as V,_ as B,E as D,G as N,H as $,O as p,U as H,J as j}from"./main-653d6738.js";import{S as q}from"./SessionBase-0cc25e2f.js";import{H as C,a as v,S as l}from"./taquito.es6-e44d04e4.js";import"./DAppClient-3841790b.js";function d(a,t,s,e){function n(i){return i instanceof s?i:new s(function(o){o(i)})}return new(s||(s=Promise))(function(i,o){function c(u){try{g(e.next(u))}catch(w){o(w)}}function h(u){try{g(e.throw(u))}catch(w){o(w)}}function g(u){u.done?i(u.value):n(u.value).then(c,h)}g((e=e.apply(a,t||[])).next())})}class E extends y{constructor(t,s){super(),this.pkh=t,this.cause=s,this.name="KeyNotFoundError",this.message=`Public key not found of this address "${t}".`}}class L extends V{constructor(t,s){super(),this.message=t,this.cause=s,this.name="OperationNotAuthorized"}}class W extends y{constructor(t,s,e){super(),this.cause=t,this.bytes=s,this.name="BadSigningData",this.message=e?"Invalid signing data with watermark":`Invalid signing data: "${s}"`}}class G extends y{constructor(t,s,e){super(),this.requestedPk=t,this.requestedPkh=s,this.initializedPkh=e,this.name="PublicKeyVerificationFailedError",this.message=`Requested pk "${t}" has pkh "${s}" deesn't match initialized pkh "${e}."`}}class M extends y{constructor(t,s){super(),this.bytes=t,this.signature=s,this.name="SignatureVerificationFailedError",this.name="SignatureVerificationFailedError",this.message="Invalid signature of bytes failed verification agaisnt public key."}}const x={ed:{pk:r.edpk,sk:r.edsk,pkh:r.tz1,sig:r.edsig},p2:{pk:r.p2pk,sk:r.p2sk,pkh:r.tz3,sig:r.p2sig},sp:{pk:r.sppk,sk:r.spsk,pkh:r.tz2,sig:r.spsig}};class X{constructor(t,s,e={},n=new C){this.pkh=t,this.rootUrl=s,this.options=e,this.http=n;const i=O(this.pkh);if(i!==f.VALID)throw new S(this.pkh,_(i))}publicKeyHash(){return d(this,void 0,void 0,function*(){return this.pkh})}createURL(t){return`${this.rootUrl.replace(/\/+$/g,"")}${t}`}publicKey(){return d(this,void 0,void 0,function*(){try{const{public_key:t}=yield this.http.createRequest({url:this.createURL(`/keys/${this.pkh}`),method:"GET",headers:this.options.headers});return t}catch(t){throw t instanceof v&&t.status===l.NOT_FOUND?new E(this.pkh,t):t}})}secretKey(){return d(this,void 0,void 0,function*(){throw new A("Secret key cannot be exposed")})}sign(t,s){return d(this,void 0,void 0,function*(){try{let e=K(t);typeof s<"u"&&(e=I(s,e));const n=k(m(e)),{signature:i}=yield this.http.createRequest({url:this.createURL(`/keys/${this.pkh}`),method:"POST",headers:this.options.headers},n),o=i.startsWith("sig")?i.substring(0,3):i.substring(0,5);if(!R(o))throw new U(i,_(f.NO_PREFIX_MATCHED)+" from a remote signer.");const c=b(i,r[o]),h=yield this.publicKey();if(yield this.verifyPublicKey(h),!P(n,h,i))throw new M(n,i);return{bytes:t,sig:T(c,r.sig),prefixSig:i,sbytes:t+k(m(c))}}catch(e){if(e instanceof v){if(e.status===l.NOT_FOUND)throw new E(this.pkh,e);if(e.status===l.FORBIDDEN)throw new L("Signing Operation not authorized",e);if(e.status===l.BAD_REQUEST)throw new W(e,t,s)}throw e}})}verifyPublicKey(t){return d(this,void 0,void 0,function*(){const s=t.substring(0,2),e=b(t,x[s].pk),n=T(F.hash(e,20),x[s].pkh);if(n!==this.pkh)throw new G(t,n,this.pkh)})}}const J=async(a,t,s)=>{const{create_toolkit:e}=await B(()=>import("./taquito-eebcd1ca.js"),["assets/taquito-eebcd1ca.js","assets/taquito.es6-e44d04e4.js","assets/main-653d6738.js","assets/index-64bbceaa.css","assets/DAppClient-3841790b.js"]),{tezos:n,forger:i}=await e(s.rpc),o=new X(a,t);n.setSignerProvider(o);const c=a,h=c?await n.rpc.getManagerKey(c):void 0;return{account:c,tezos:n,forger:i,managerKey:h==null?void 0:h.toString()}},{request_ledger_setup:Q}=H();class z extends q{constructor(t,s,e,n,i){super(t,e,n,i),this.url=s}get AccountType(){return D.Remote}get Icon(){return new N("cloud",$.icon)}get IsAccountSwitchSupported(){return!1}static async create(t,s,e,n){const i=j[e];if(!i)throw new Error("Invalid network specification!");const{tezos:o,forger:c,managerKey:h}=await J(t,s,{...n,rpc:(n==null?void 0:n.rpc)??i.rpc});return new z(t,s,o,c,{networkId:e,managerKey:h})}static async create_from_cache(){}logout(){}async switch_wallet(){const t=await Q({networkId:this.NetworkId,rpc:this.Tezos.rpc.getRpcUrl()});if(!t)throw new Error("Aborted.");return t}async vote(t){const s=await this.forge_ballot_op(t),e=async()=>{const n=this.Tezos.wallet.context,i=await this.Tezos.signer.sign(s,new Uint8Array([3])),o=await this.Tezos.rpc.injectOperation(i.sbytes);return n.operationFactory.createOperation(o)};return new p(e,"Vote",{account:this.Account,ballot:t})}async propose(t){const s=await this.forge_proposals_op(t),e=async()=>{const n=this.Tezos.wallet.context,i=await this.Tezos.signer.sign(s,new Uint8Array([3])),o=await this.Tezos.rpc.injectOperation(i.sbytes);return n.operationFactory.createOperation(o)};return new p(e,"Propose",{account:this.Account,proposals:t})}async set_deposits_limit(t){const s=await this.forge_set_deposit_op(t),e=async()=>{const n=this.Tezos.wallet.context,i=await this.Tezos.signer.sign(s,new Uint8Array([3])),o=await this.Tezos.rpc.injectOperation(i.sbytes);return n.operationFactory.createOperation(o)};return new p(e,"Propose",{account:this.Account,limit:t.toString()})}async update_consensus_key(t){const s=await this.forge_update_consensus_key_op(t),e=async()=>{const n=this.Tezos.wallet.context,i=await this.Tezos.signer.sign(s,new Uint8Array([3])),o=await this.Tezos.rpc.injectOperation(i.sbytes);return n.operationFactory.createOperation(o)};return new p(e,"Propose",{account:this.Account,"Consensus Key":t})}async restore_consensus_key(){const t=await this.Tezos.signer.publicKey(),s=await this.forge_update_consensus_key_op(t),e=async()=>{const n=this.Tezos.wallet.context,i=await this.Tezos.signer.sign(s,new Uint8Array([3])),o=await this.Tezos.rpc.injectOperation(i.sbytes);return n.operationFactory.createOperation(o)};return new p(e,"Restore consensus key",{account:this.Account,"Consensus Key":t})}}export{z as RemoteSession};
